<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.21.0110.1657                               -->
<workbook original-version='18.1' source-build='2020.3.5 (20203.21.0110.1657)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Listings+ (CityRentals)' inline='true' name='federated.1tzjqpp1ce9gpm184adgb1v300ed' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CityRentals' name='excel-direct.0rgsom70zeuzja1ctgspp1jbw1c2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/DBS MS/DA106 DataVisualisation/CityRentals.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0rgsom70zeuzja1ctgspp1jbw1c2' name='Listings' table='[Listings$]' type='table'>
          <columns gridOrigin='A1:J10001:no:A1:J10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='listing_id' ordinal='0' />
            <column datatype='integer' name='host_id' ordinal='1' />
            <column datatype='string' name='host_name' ordinal='2' />
            <column datatype='string' name='borough' ordinal='3' />
            <column datatype='string' name='neighbourhood' ordinal='4' />
            <column datatype='real' name='latitude' ordinal='5' />
            <column datatype='real' name='longitude' ordinal='6' />
            <column datatype='string' name='accomodation_type' ordinal='7' />
            <column datatype='integer' name='price_per_night' ordinal='8' />
            <column datatype='integer' name='minimum_nights' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0rgsom70zeuzja1ctgspp1jbw1c2' name='Listings' table='[Listings$]' type='table'>
            <columns gridOrigin='A1:J10001:no:A1:J10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='listing_id' ordinal='0' />
              <column datatype='integer' name='host_id' ordinal='1' />
              <column datatype='string' name='host_name' ordinal='2' />
              <column datatype='string' name='borough' ordinal='3' />
              <column datatype='string' name='neighbourhood' ordinal='4' />
              <column datatype='real' name='latitude' ordinal='5' />
              <column datatype='real' name='longitude' ordinal='6' />
              <column datatype='string' name='accomodation_type' ordinal='7' />
              <column datatype='integer' name='price_per_night' ordinal='8' />
              <column datatype='integer' name='minimum_nights' ordinal='9' />
            </columns>
          </relation>
          <relation connection='excel-direct.0rgsom70zeuzja1ctgspp1jbw1c2' name='Reviews' table='[Reviews$]' type='table'>
            <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='listing_id' ordinal='0' />
              <column datatype='integer' name='number_of_positive_reviews' ordinal='1' />
              <column datatype='real' name='positive_reviews_per_month' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[accomodation_type]' value='[Listings].[accomodation_type]' />
          <map key='[borough]' value='[Listings].[borough]' />
          <map key='[host_id]' value='[Listings].[host_id]' />
          <map key='[host_name]' value='[Listings].[host_name]' />
          <map key='[latitude]' value='[Listings].[latitude]' />
          <map key='[listing_id (Reviews)]' value='[Reviews].[listing_id]' />
          <map key='[listing_id]' value='[Listings].[listing_id]' />
          <map key='[longitude]' value='[Listings].[longitude]' />
          <map key='[minimum_nights]' value='[Listings].[minimum_nights]' />
          <map key='[neighbourhood]' value='[Listings].[neighbourhood]' />
          <map key='[number_of_positive_reviews]' value='[Reviews].[number_of_positive_reviews]' />
          <map key='[positive_reviews_per_month]' value='[Reviews].[positive_reviews_per_month]' />
          <map key='[price_per_night]' value='[Listings].[price_per_night]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Listings]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J10001:no:A1:J10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Reviews]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listing_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[listing_id]</local-name>
            <parent-name>[Listings]</parent-name>
            <remote-alias>listing_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Listings_70A168E5D2F84E4C8E47E31FB2998F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[Listings]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Listings_70A168E5D2F84E4C8E47E31FB2998F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_name]</local-name>
            <parent-name>[Listings]</parent-name>
            <remote-alias>host_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Listings_70A168E5D2F84E4C8E47E31FB2998F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>borough</remote-name>
            <remote-type>130</remote-type>
            <local-name>[borough]</local-name>
            <parent-name>[Listings]</parent-name>
            <remote-alias>borough</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Listings_70A168E5D2F84E4C8E47E31FB2998F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[Listings]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Listings_70A168E5D2F84E4C8E47E31FB2998F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Listings]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Listings_70A168E5D2F84E4C8E47E31FB2998F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Listings]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Listings_70A168E5D2F84E4C8E47E31FB2998F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accomodation_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[accomodation_type]</local-name>
            <parent-name>[Listings]</parent-name>
            <remote-alias>accomodation_type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Listings_70A168E5D2F84E4C8E47E31FB2998F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_per_night</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price_per_night]</local-name>
            <parent-name>[Listings]</parent-name>
            <remote-alias>price_per_night</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Listings_70A168E5D2F84E4C8E47E31FB2998F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_nights]</local-name>
            <parent-name>[Listings]</parent-name>
            <remote-alias>minimum_nights</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Listings_70A168E5D2F84E4C8E47E31FB2998F29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listing_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[listing_id (Reviews)]</local-name>
            <parent-name>[Reviews]</parent-name>
            <remote-alias>listing_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews_192FAC5484A74F6787F9BE44F9AF8300]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_positive_reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_positive_reviews]</local-name>
            <parent-name>[Reviews]</parent-name>
            <remote-alias>number_of_positive_reviews</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews_192FAC5484A74F6787F9BE44F9AF8300]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_reviews_per_month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_reviews_per_month]</local-name>
            <parent-name>[Reviews]</parent-name>
            <remote-alias>positive_reviews_per_month</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews_192FAC5484A74F6787F9BE44F9AF8300]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg per night in borough' datatype='real' name='[Calculation_732960856069668864]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [accomodation_type], [Calculation_916482538398679041], [Calculation_916482538397569024] : AVG([price_per_night])}' />
      </column>
      <column caption='Avg per night in neighbourhood' datatype='real' name='[Calculation_732960856070819841]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [accomodation_type], [Calculation_916482538398679041], [Calculation_916482538397569024] , [borough], [neighbourhood] : AVG([price_per_night])}' />
      </column>
      <column caption='StayType' datatype='string' name='[Calculation_916482538397569024]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [minimum_nights] &gt;= 1 AND [minimum_nights]&lt;= 7 THEN &apos;Short Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 7 AND [minimum_nights]&lt;= 31 THEN &apos;Medium Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 31 THEN &apos;Long Stay&apos;&#13;&#10;END' />
      </column>
      <column caption='PriceTier' datatype='string' name='[Calculation_916482538398679041]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [price_per_night] &lt;= 100 THEN &apos;Budget&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 100 AND [price_per_night] &lt;=200 THEN &apos;Deluxe&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 200 AND [price_per_night] &lt;=500 THEN &apos;Executive&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 500 THEN &apos;Luxury&apos;&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Listings' datatype='table' name='[__tableau_internal_object_id__].[Listings_70A168E5D2F84E4C8E47E31FB2998F29]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Reviews' datatype='table' name='[__tableau_internal_object_id__].[Reviews_192FAC5484A74F6787F9BE44F9AF8300]' role='measure' type='quantitative' />
      <column caption='Accomodation Type' datatype='string' name='[accomodation_type]' role='dimension' type='nominal' />
      <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal' />
      <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
      <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='listing id (Reviews)' datatype='integer' name='[listing_id (Reviews)]' role='dimension' type='ordinal' />
      <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Number Of Positive Reviews' datatype='integer' name='[number_of_positive_reviews]' role='measure' type='quantitative' />
      <column caption='Positive Reviews Per Month' datatype='real' name='[positive_reviews_per_month]' role='dimension' type='quantitative' />
      <column caption='Price Per Night' datatype='integer' name='[price_per_night]' role='measure' type='quantitative' />
      <column-instance column='[borough]' derivation='None' name='[none:borough:nk]' pivot='key' type='nominal' />
      <column-instance column='[number_of_positive_reviews]' derivation='None' name='[none:number_of_positive_reviews:ok]' pivot='key' type='ordinal' />
      <column-instance column='[positive_reviews_per_month]' derivation='None' name='[none:positive_reviews_per_month:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Borough)' hidden='true' name='[Action (Borough)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[borough]' />
        </groupfilter>
      </group>
      <group caption='Action (Borough,Host Name,Listing Id,Neighbourhood,Number Of Positive Reviews,Positive Reviews Per Month)' hidden='true' name='[Action (Borough,Host Name,Listing Id,Neighbourhood,Number Of Positive Reviews,Positive Reviews Per Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[borough]' />
          <groupfilter function='level-members' level='[host_name]' />
          <groupfilter function='level-members' level='[listing_id]' />
          <groupfilter function='level-members' level='[neighbourhood]' />
          <groupfilter function='level-members' level='[none:number_of_positive_reviews:ok]' />
          <groupfilter function='level-members' level='[none:positive_reviews_per_month:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Borough,Listing Id)' hidden='true' name='[Action (Borough,Listing Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[borough]' />
          <groupfilter function='level-members' level='[listing_id]' />
        </groupfilter>
      </group>
      <group caption='Action (Borough,Neighbourhood)' hidden='true' name='[Action (Borough,Neighbourhood)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[borough]' />
          <groupfilter function='level-members' level='[neighbourhood]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:borough:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Listings' id='Listings_70A168E5D2F84E4C8E47E31FB2998F29'>
            <properties context=''>
              <relation connection='excel-direct.0rgsom70zeuzja1ctgspp1jbw1c2' name='Listings' table='[Listings$]' type='table'>
                <columns gridOrigin='A1:J10001:no:A1:J10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='listing_id' ordinal='0' />
                  <column datatype='integer' name='host_id' ordinal='1' />
                  <column datatype='string' name='host_name' ordinal='2' />
                  <column datatype='string' name='borough' ordinal='3' />
                  <column datatype='string' name='neighbourhood' ordinal='4' />
                  <column datatype='real' name='latitude' ordinal='5' />
                  <column datatype='real' name='longitude' ordinal='6' />
                  <column datatype='string' name='accomodation_type' ordinal='7' />
                  <column datatype='integer' name='price_per_night' ordinal='8' />
                  <column datatype='integer' name='minimum_nights' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Reviews' id='Reviews_192FAC5484A74F6787F9BE44F9AF8300'>
            <properties context=''>
              <relation connection='excel-direct.0rgsom70zeuzja1ctgspp1jbw1c2' name='Reviews' table='[Reviews$]' type='table'>
                <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='listing_id' ordinal='0' />
                  <column datatype='integer' name='number_of_positive_reviews' ordinal='1' />
                  <column datatype='real' name='positive_reviews_per_month' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[listing_id]' />
              <expression op='[listing_id (Reviews)]' />
            </expression>
            <first-end-point object-id='Listings_70A168E5D2F84E4C8E47E31FB2998F29' />
            <second-end-point object-id='Reviews_192FAC5484A74F6787F9BE44F9AF8300' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1tzjqpp1ce9gpm184adgb1v300ed'>
      <datasources>
        <datasource caption='Listings+ (CityRentals)' name='federated.1tzjqpp1ce9gpm184adgb1v300ed' />
      </datasources>
      <datasource-dependencies datasource='federated.1tzjqpp1ce9gpm184adgb1v300ed'>
        <column caption='StayType' datatype='string' name='[Calculation_916482538397569024]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [minimum_nights] &gt;= 1 AND [minimum_nights]&lt;= 7 THEN &apos;Short Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 7 AND [minimum_nights]&lt;= 31 THEN &apos;Medium Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 31 THEN &apos;Long Stay&apos;&#13;&#10;END' />
        </column>
        <column caption='PriceTier' datatype='string' name='[Calculation_916482538398679041]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [price_per_night] &lt;= 100 THEN &apos;Budget&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 100 AND [price_per_night] &lt;=200 THEN &apos;Deluxe&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 200 AND [price_per_night] &lt;=500 THEN &apos;Executive&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 500 THEN &apos;Luxury&apos;&#13;&#10;END' />
        </column>
        <column caption='Accomodation Type' datatype='string' name='[accomodation_type]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_916482538397569024]' derivation='None' name='[none:Calculation_916482538397569024:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_916482538398679041]' derivation='None' name='[none:Calculation_916482538398679041:nk]' pivot='key' type='nominal' />
        <column-instance column='[accomodation_type]' derivation='None' name='[none:accomodation_type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_916482538397569024:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_916482538398679041:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]'>
        <groupfilter function='level-members' level='[none:accomodation_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CityRentals' type='sheet' worksheet='SelectBorough' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='SelectBorough' />
        <param name='special-fields' value='all' />
        <param name='target' value='CityRentals' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation type='on-select' />
      <source dashboard='CityRentals' type='sheet' worksheet='SelectNeighbourhood' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='SelectBorough,SelectNeighbourhood' />
        <param name='special-fields' value='all' />
        <param name='target' value='CityRentals' />
      </command>
    </action>
    <action caption='Filter3' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CityRentals' type='sheet' worksheet='PriceDistribution' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='PriceDistribution,SelectBorough,SelectNeighbourhood' />
        <param name='special-fields' value='all' />
        <param name='target' value='CityRentals' />
      </command>
    </action>
    <action caption='Filter4' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CityRentals' type='sheet' worksheet='PopularListings' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='PopularListings,PriceDistribution,SelectBorough,SelectNeighbourhood' />
        <param name='special-fields' value='all' />
        <param name='target' value='CityRentals' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='Listings+ (CityRentals)' name='federated.1tzjqpp1ce9gpm184adgb1v300ed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1tzjqpp1ce9gpm184adgb1v300ed'>
            <column caption='StayType' datatype='string' name='[Calculation_916482538397569024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [minimum_nights] &gt;= 1 AND [minimum_nights]&lt;= 7 THEN &apos;Short Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 7 AND [minimum_nights]&lt;= 31 THEN &apos;Medium Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 31 THEN &apos;Long Stay&apos;&#13;&#10;END' />
            </column>
            <column caption='PriceTier' datatype='string' name='[Calculation_916482538398679041]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [price_per_night] &lt;= 100 THEN &apos;Budget&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 100 AND [price_per_night] &lt;=200 THEN &apos;Deluxe&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 200 AND [price_per_night] &lt;=500 THEN &apos;Executive&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 500 THEN &apos;Luxury&apos;&#13;&#10;END' />
            </column>
            <column caption='Accomodation Type' datatype='string' name='[accomodation_type]' role='dimension' type='nominal' />
            <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal' />
            <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_916482538397569024]' derivation='None' name='[none:Calculation_916482538397569024:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_916482538398679041]' derivation='None' name='[none:Calculation_916482538398679041:nk]' pivot='key' type='nominal' />
            <column-instance column='[accomodation_type]' derivation='None' name='[none:accomodation_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[borough]' derivation='None' name='[none:borough:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[listing_id]' derivation='None' name='[none:listing_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[number_of_positive_reviews]' derivation='None' name='[none:number_of_positive_reviews:ok]' pivot='key' type='ordinal' />
            <column-instance column='[positive_reviews_per_month]' derivation='None' name='[none:positive_reviews_per_month:ok]' pivot='key' type='ordinal' />
            <column caption='Number Of Positive Reviews' datatype='integer' name='[number_of_positive_reviews]' role='measure' type='quantitative' />
            <column caption='Positive Reviews Per Month' datatype='real' name='[positive_reviews_per_month]' role='dimension' type='quantitative' />
            <column caption='Price Per Night' datatype='integer' name='[price_per_night]' role='measure' type='quantitative' />
            <column-instance column='[price_per_night]' derivation='Sum' name='[sum:price_per_night:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough)]'>
            <groupfilter function='level-members' level='[borough]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Host Name,Listing Id,Neighbourhood,Number Of Positive Reviews,Positive Reviews Per Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[borough]' />
              <groupfilter function='level-members' level='[host_name]' />
              <groupfilter function='level-members' level='[listing_id]' />
              <groupfilter function='level-members' level='[neighbourhood]' />
              <groupfilter function='level-members' level='[none:number_of_positive_reviews:ok]' />
              <groupfilter function='level-members' level='[none:positive_reviews_per_month:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Listing Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[borough]' />
              <groupfilter function='level-members' level='[listing_id]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Neighbourhood)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[borough]' />
              <groupfilter function='level-members' level='[neighbourhood]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough)]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Neighbourhood)]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Listing Id)]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Host Name,Listing Id,Neighbourhood,Number Of Positive Reviews,Positive Reviews Per Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:latitude:qk]' field-type='quantitative' max='5003664.7032261742' min='4931326.2081977781' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:longitude:qk]' field-type='quantitative' max='-8179151.6851027459' min='-8284960.2343996102' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[sum:price_per_night:qk]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:neighbourhood:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Borough:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Listing Id:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Price Per Night:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[sum:price_per_night:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:latitude:qk]</rows>
        <cols>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{687A1FFE-5FB3-4CCA-B17C-AB957BAA7380}' />
    </worksheet>
    <worksheet name='Location (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Listings+ (CityRentals)' name='federated.1tzjqpp1ce9gpm184adgb1v300ed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1tzjqpp1ce9gpm184adgb1v300ed'>
            <column caption='Avg per night in borough' datatype='real' name='[Calculation_732960856069668864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [accomodation_type], [Calculation_916482538398679041], [Calculation_916482538397569024] : AVG([price_per_night])}' />
            </column>
            <column caption='Avg per night in neighbourhood' datatype='real' name='[Calculation_732960856070819841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [accomodation_type], [Calculation_916482538398679041], [Calculation_916482538397569024] , [borough], [neighbourhood] : AVG([price_per_night])}' />
            </column>
            <column caption='StayType' datatype='string' name='[Calculation_916482538397569024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [minimum_nights] &gt;= 1 AND [minimum_nights]&lt;= 7 THEN &apos;Short Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 7 AND [minimum_nights]&lt;= 31 THEN &apos;Medium Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 31 THEN &apos;Long Stay&apos;&#13;&#10;END' />
            </column>
            <column caption='PriceTier' datatype='string' name='[Calculation_916482538398679041]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [price_per_night] &lt;= 100 THEN &apos;Budget&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 100 AND [price_per_night] &lt;=200 THEN &apos;Deluxe&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 200 AND [price_per_night] &lt;=500 THEN &apos;Executive&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 500 THEN &apos;Luxury&apos;&#13;&#10;END' />
            </column>
            <column caption='Accomodation Type' datatype='string' name='[accomodation_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_732960856069668864]' derivation='Attribute' name='[attr:Calculation_732960856069668864:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_732960856070819841]' derivation='Attribute' name='[attr:Calculation_732960856070819841:qk]' pivot='key' type='quantitative' />
            <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal' />
            <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_916482538397569024]' derivation='None' name='[none:Calculation_916482538397569024:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_916482538398679041]' derivation='None' name='[none:Calculation_916482538398679041:nk]' pivot='key' type='nominal' />
            <column-instance column='[accomodation_type]' derivation='None' name='[none:accomodation_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[borough]' derivation='None' name='[none:borough:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[listing_id]' derivation='None' name='[none:listing_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[number_of_positive_reviews]' derivation='None' name='[none:number_of_positive_reviews:ok]' pivot='key' type='ordinal' />
            <column-instance column='[positive_reviews_per_month]' derivation='None' name='[none:positive_reviews_per_month:ok]' pivot='key' type='ordinal' />
            <column caption='Number Of Positive Reviews' datatype='integer' name='[number_of_positive_reviews]' role='measure' type='quantitative' />
            <column caption='Positive Reviews Per Month' datatype='real' name='[positive_reviews_per_month]' role='dimension' type='quantitative' />
            <column caption='Price Per Night' datatype='integer' name='[price_per_night]' role='measure' type='quantitative' />
            <column-instance column='[price_per_night]' derivation='Sum' name='[sum:price_per_night:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough)]'>
            <groupfilter function='level-members' level='[borough]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Host Name,Listing Id,Neighbourhood,Number Of Positive Reviews,Positive Reviews Per Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[borough]' />
              <groupfilter function='level-members' level='[host_name]' />
              <groupfilter function='level-members' level='[listing_id]' />
              <groupfilter function='level-members' level='[neighbourhood]' />
              <groupfilter function='level-members' level='[none:number_of_positive_reviews:ok]' />
              <groupfilter function='level-members' level='[none:positive_reviews_per_month:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Listing Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[borough]' />
              <groupfilter function='level-members' level='[listing_id]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Neighbourhood)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[borough]' />
              <groupfilter function='level-members' level='[neighbourhood]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough)]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Neighbourhood)]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Listing Id)]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Host Name,Listing Id,Neighbourhood,Number Of Positive Reviews,Positive Reviews Per Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:latitude:qk]' field-type='quantitative' max='5026793.3382975981' min='4914682.9409333766' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:longitude:qk]' field-type='quantitative' max='-8094057.3677835334' min='-8283809.4414392216' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[sum:price_per_night:qk]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:neighbourhood:nk]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[attr:Calculation_732960856069668864:qk]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[attr:Calculation_732960856070819841:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Borough:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Listing Id:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Price Per Night:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[sum:price_per_night:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:latitude:qk]</rows>
        <cols>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{1AD13031-A974-4E1D-93EF-BC26A3680749}' />
    </worksheet>
    <worksheet name='PopularListings'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Popular Listings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Listings+ (CityRentals)' name='federated.1tzjqpp1ce9gpm184adgb1v300ed' />
          </datasources>
          <datasource-dependencies datasource='federated.1tzjqpp1ce9gpm184adgb1v300ed'>
            <column caption='StayType' datatype='string' name='[Calculation_916482538397569024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [minimum_nights] &gt;= 1 AND [minimum_nights]&lt;= 7 THEN &apos;Short Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 7 AND [minimum_nights]&lt;= 31 THEN &apos;Medium Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 31 THEN &apos;Long Stay&apos;&#13;&#10;END' />
            </column>
            <column caption='PriceTier' datatype='string' name='[Calculation_916482538398679041]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [price_per_night] &lt;= 100 THEN &apos;Budget&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 100 AND [price_per_night] &lt;=200 THEN &apos;Deluxe&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 200 AND [price_per_night] &lt;=500 THEN &apos;Executive&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 500 THEN &apos;Luxury&apos;&#13;&#10;END' />
            </column>
            <column caption='Accomodation Type' datatype='string' name='[accomodation_type]' role='dimension' type='nominal' />
            <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal' />
            <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
            <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_916482538397569024]' derivation='None' name='[none:Calculation_916482538397569024:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_916482538398679041]' derivation='None' name='[none:Calculation_916482538398679041:nk]' pivot='key' type='nominal' />
            <column-instance column='[accomodation_type]' derivation='None' name='[none:accomodation_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[borough]' derivation='None' name='[none:borough:nk]' pivot='key' type='nominal' />
            <column-instance column='[host_name]' derivation='None' name='[none:host_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[listing_id]' derivation='None' name='[none:listing_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[number_of_positive_reviews]' derivation='None' name='[none:number_of_positive_reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive_reviews_per_month]' derivation='None' name='[none:positive_reviews_per_month:qk]' pivot='key' type='quantitative' />
            <column caption='Number Of Positive Reviews' datatype='integer' name='[number_of_positive_reviews]' role='measure' type='quantitative' />
            <column caption='Positive Reviews Per Month' datatype='real' name='[positive_reviews_per_month]' role='dimension' type='quantitative' />
            <column caption='Price Per Night' datatype='integer' name='[price_per_night]' role='measure' type='quantitative' />
            <column-instance column='[price_per_night]' derivation='Sum' name='[sum:price_per_night:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough)]'>
            <groupfilter function='level-members' level='[borough]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Listing Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[borough]' />
              <groupfilter function='level-members' level='[listing_id]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Neighbourhood)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[borough]' />
              <groupfilter function='level-members' level='[neighbourhood]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough)]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Neighbourhood)]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Listing Id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:host_name:nk]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[sum:price_per_night:qk]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:neighbourhood:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:number_of_positive_reviews:qk]</rows>
        <cols>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:positive_reviews_per_month:qk]</cols>
      </table>
      <simple-id uuid='{5A0DCB05-05EF-4155-B810-A30A54FD4E04}' />
    </worksheet>
    <worksheet name='PriceDistribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Price Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Listings+ (CityRentals)' name='federated.1tzjqpp1ce9gpm184adgb1v300ed' />
          </datasources>
          <datasource-dependencies datasource='federated.1tzjqpp1ce9gpm184adgb1v300ed'>
            <column caption='StayType' datatype='string' name='[Calculation_916482538397569024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [minimum_nights] &gt;= 1 AND [minimum_nights]&lt;= 7 THEN &apos;Short Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 7 AND [minimum_nights]&lt;= 31 THEN &apos;Medium Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 31 THEN &apos;Long Stay&apos;&#13;&#10;END' />
            </column>
            <column caption='PriceTier' datatype='string' name='[Calculation_916482538398679041]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [price_per_night] &lt;= 100 THEN &apos;Budget&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 100 AND [price_per_night] &lt;=200 THEN &apos;Deluxe&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 200 AND [price_per_night] &lt;=500 THEN &apos;Executive&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 500 THEN &apos;Luxury&apos;&#13;&#10;END' />
            </column>
            <column caption='Accomodation Type' datatype='string' name='[accomodation_type]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='Attribute' name='[attr:neighbourhood:nk]' pivot='key' type='nominal' />
            <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal' />
            <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_916482538397569024]' derivation='None' name='[none:Calculation_916482538397569024:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_916482538398679041]' derivation='None' name='[none:Calculation_916482538398679041:nk]' pivot='key' type='nominal' />
            <column-instance column='[accomodation_type]' derivation='None' name='[none:accomodation_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[borough]' derivation='None' name='[none:borough:nk]' pivot='key' type='nominal' />
            <column-instance column='[listing_id]' derivation='None' name='[none:listing_id:ok]' pivot='key' type='ordinal' />
            <column caption='Price Per Night' datatype='integer' name='[price_per_night]' role='measure' type='quantitative' />
            <column-instance column='[price_per_night]' derivation='Sum' name='[sum:price_per_night:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough)]'>
            <groupfilter function='level-members' level='[borough]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Neighbourhood)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[borough]' />
              <groupfilter function='level-members' level='[neighbourhood]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[sum:price_per_night:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough)]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough,Neighbourhood)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]' />
              <lod column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[attr:neighbourhood:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[sum:price_per_night:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[sum:price_per_night:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Listing Id:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Borough:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Neighbourhood:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[attr:neighbourhood:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Price Per Night:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[sum:price_per_night:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[sum:price_per_night:qk]</rows>
        <cols>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]</cols>
      </table>
      <simple-id uuid='{A00A2CC8-5125-495D-A6BA-FF9503B7D3F7}' />
    </worksheet>
    <worksheet name='SelectBorough'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Select Borough</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Listings+ (CityRentals)' name='federated.1tzjqpp1ce9gpm184adgb1v300ed' />
          </datasources>
          <datasource-dependencies datasource='federated.1tzjqpp1ce9gpm184adgb1v300ed'>
            <column caption='StayType' datatype='string' name='[Calculation_916482538397569024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [minimum_nights] &gt;= 1 AND [minimum_nights]&lt;= 7 THEN &apos;Short Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 7 AND [minimum_nights]&lt;= 31 THEN &apos;Medium Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 31 THEN &apos;Long Stay&apos;&#13;&#10;END' />
            </column>
            <column caption='PriceTier' datatype='string' name='[Calculation_916482538398679041]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [price_per_night] &lt;= 100 THEN &apos;Budget&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 100 AND [price_per_night] &lt;=200 THEN &apos;Deluxe&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 200 AND [price_per_night] &lt;=500 THEN &apos;Executive&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 500 THEN &apos;Luxury&apos;&#13;&#10;END' />
            </column>
            <column caption='Accomodation Type' datatype='string' name='[accomodation_type]' role='dimension' type='nominal' />
            <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal' />
            <column-instance column='[listing_id]' derivation='CountD' name='[ctd:listing_id:qk]' pivot='key' type='quantitative' />
            <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_916482538397569024]' derivation='None' name='[none:Calculation_916482538397569024:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_916482538398679041]' derivation='None' name='[none:Calculation_916482538398679041:nk]' pivot='key' type='nominal' />
            <column-instance column='[accomodation_type]' derivation='None' name='[none:accomodation_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[borough]' derivation='None' name='[none:borough:nk]' pivot='key' type='nominal' />
            <column caption='Price Per Night' datatype='integer' name='[price_per_night]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[ctd:listing_id:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[ctd:listing_id:qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' value='41' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]' value='Select Accomodation Type'>
              <formatted-text>
                <run>Select Accomodation Type</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]' value='Select Stay Type'>
              <formatted-text>
                <run>Select Stay Type</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]' value='Select Price Tier'>
              <formatted-text>
                <run>Select Price Tier</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' />
              <text column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[ctd:listing_id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Borough:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Listings:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[ctd:listing_id:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[ctd:listing_id:qk]</rows>
        <cols>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]</cols>
      </table>
      <simple-id uuid='{BAA5B71D-3F1B-42DD-8B4B-9EA4E9083659}' />
    </worksheet>
    <worksheet name='SelectNeighbourhood'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Select Neighbourhood</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Listings+ (CityRentals)' name='federated.1tzjqpp1ce9gpm184adgb1v300ed' />
          </datasources>
          <datasource-dependencies datasource='federated.1tzjqpp1ce9gpm184adgb1v300ed'>
            <column caption='StayType' datatype='string' name='[Calculation_916482538397569024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [minimum_nights] &gt;= 1 AND [minimum_nights]&lt;= 7 THEN &apos;Short Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 7 AND [minimum_nights]&lt;= 31 THEN &apos;Medium Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 31 THEN &apos;Long Stay&apos;&#13;&#10;END' />
            </column>
            <column caption='PriceTier' datatype='string' name='[Calculation_916482538398679041]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [price_per_night] &lt;= 100 THEN &apos;Budget&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 100 AND [price_per_night] &lt;=200 THEN &apos;Deluxe&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 200 AND [price_per_night] &lt;=500 THEN &apos;Executive&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 500 THEN &apos;Luxury&apos;&#13;&#10;END' />
            </column>
            <column caption='Accomodation Type' datatype='string' name='[accomodation_type]' role='dimension' type='nominal' />
            <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal' />
            <column-instance column='[listing_id]' derivation='CountD' name='[ctd:listing_id:qk]' pivot='key' type='quantitative' />
            <column caption='Listing Id' datatype='integer' name='[listing_id]' role='dimension' type='ordinal' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_916482538397569024]' derivation='None' name='[none:Calculation_916482538397569024:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_916482538398679041]' derivation='None' name='[none:Calculation_916482538398679041:nk]' pivot='key' type='nominal' />
            <column-instance column='[accomodation_type]' derivation='None' name='[none:accomodation_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[borough]' derivation='None' name='[none:borough:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column caption='Price Per Night' datatype='integer' name='[price_per_night]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough)]'>
            <groupfilter function='level-members' level='[borough]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:neighbourhood:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[ctd:listing_id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]</column>
            <column>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' />
              <text column='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[ctd:listing_id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Neighbourhood:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:neighbourhood:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Listings:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tzjqpp1ce9gpm184adgb1v300ed].[ctd:listing_id:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:neighbourhood:nk]</rows>
        <cols>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[ctd:listing_id:qk]</cols>
      </table>
      <simple-id uuid='{F71DC6F1-40E2-446A-A618-166D7FC36201}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CityRentals'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Listings+ (CityRentals)' name='federated.1tzjqpp1ce9gpm184adgb1v300ed' />
      </datasources>
      <datasource-dependencies datasource='federated.1tzjqpp1ce9gpm184adgb1v300ed'>
        <column caption='StayType' datatype='string' name='[Calculation_916482538397569024]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [minimum_nights] &gt;= 1 AND [minimum_nights]&lt;= 7 THEN &apos;Short Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 7 AND [minimum_nights]&lt;= 31 THEN &apos;Medium Stay&apos;&#13;&#10;ELSEIF [minimum_nights] &gt; 31 THEN &apos;Long Stay&apos;&#13;&#10;END' />
        </column>
        <column caption='PriceTier' datatype='string' name='[Calculation_916482538398679041]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [price_per_night] &lt;= 100 THEN &apos;Budget&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 100 AND [price_per_night] &lt;=200 THEN &apos;Deluxe&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 200 AND [price_per_night] &lt;=500 THEN &apos;Executive&apos;&#13;&#10;ELSEIF [price_per_night] &gt; 500 THEN &apos;Luxury&apos;&#13;&#10;END' />
        </column>
        <column caption='Accomodation Type' datatype='string' name='[accomodation_type]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_916482538397569024]' derivation='None' name='[none:Calculation_916482538397569024:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_916482538398679041]' derivation='None' name='[none:Calculation_916482538398679041:nk]' pivot='key' type='nominal' />
        <column-instance column='[accomodation_type]' derivation='None' name='[none:accomodation_type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='7' param='horz' w='99002' x='499' y='978'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98044' id='5' w='99002' x='499' y='978'>
              <zone h='49022' id='3' name='SelectBorough' w='26308' x='22194' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='12' name='SelectNeighbourhood' w='50999' x='48502' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='13' name='PriceDistribution' w='32792' x='499' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='14' name='PopularListings' w='35100' x='33291' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='15' name='Location' w='31110' x='68391' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49022' id='16' param='vert' w='21695' x='499' y='978'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='123' h='16015' id='8' is-fixed='true' mode='slider' name='SelectBorough' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]' w='21695' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='127' h='16503' id='9' is-fixed='true' mode='slider' name='SelectBorough' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]' w='21695' x='499' y='16993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='144' h='16504' id='10' is-fixed='true' mode='slider' name='SelectBorough' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]' w='21695' x='499' y='33496'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='20' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='19' param='vert' w='99002' x='499' y='978'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='123' h='16015' id='8' mode='slider' name='SelectBorough' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]' w='21695' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='127' h='16503' id='9' mode='slider' name='SelectBorough' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]' w='21695' x='499' y='16993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='144' h='16504' id='10' mode='slider' name='SelectBorough' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]' w='21695' x='499' y='33496'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='3' is-fixed='true' name='SelectBorough' w='26308' x='22194' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='12' is-fixed='true' name='SelectNeighbourhood' w='50999' x='48502' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='13' is-fixed='true' name='PriceDistribution' w='32792' x='499' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='14' is-fixed='true' name='PopularListings' w='35100' x='33291' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='15' is-fixed='true' name='Location' w='31110' x='68391' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DF9CA89F-9E2E-4043-A205-36CA6DCE4007}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='SelectBorough'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37A30DDF-BDE6-44D9-86B3-F030B6CE2911}' />
    </window>
    <window class='worksheet' name='SelectNeighbourhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:neighbourhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32E8B783-2F27-4824-A20D-A15426D7AECE}' />
    </window>
    <window class='worksheet' name='PriceDistribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[attr:neighbourhood:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:neighbourhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F65C9A00-4E87-496E-94BF-74E802C01516}' />
    </window>
    <window class='worksheet' name='PopularListings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:accomodation_type:nk]' type='filter' />
            <card param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538398679041:nk]' type='filter' />
            <card param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:Calculation_916482538397569024:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:host_name:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id (Reviews):ok]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:neighbourhood:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:positive_reviews_per_month:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{43571178-DBFF-421C-96A5-4AA07BDFB5FB}' />
    </window>
    <window class='worksheet' name='Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:neighbourhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38873D56-BBB4-4D56-AA86-71EC6C87D5D2}' />
    </window>
    <window class='dashboard' name='CityRentals'>
      <viewpoints>
        <viewpoint name='Location'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='PopularListings'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='PriceDistribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SelectBorough'>
          <zoom type='entire-view' />
          <highlight field='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='SelectNeighbourhood' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2841826F-B2CA-43A7-AA58-885F32B5C873}' />
    </window>
    <window class='worksheet' maximized='true' name='Location (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='139' type='filters' />
            <card size='273' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:borough:nk]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:listing_id:ok]</field>
            <field>[federated.1tzjqpp1ce9gpm184adgb1v300ed].[none:neighbourhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AA87145-CFDA-433D-BD6A-B2CA883BCE86}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CityRentals' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Location' width='192'>
      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
      +Lr3A/4/+H1nVq0Zwc0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Location (2)' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='PopularListings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PriceDistribution' width='192'>
      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
      jjoaRhnBOQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SelectBorough' width='192'>
      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
      lgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SelectNeighbourhood' width='192'>
      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
      GbzW/D/PF2PQF3kPNwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
